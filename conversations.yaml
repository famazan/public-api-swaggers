openapi: 3.0.0
info:
  title: Conversations API
  version: 1.0.0
  description:
    This is the definition of the `conversations` API.
    A `conversation` represents a message interaction between medallia (Outbound messages) and other participants (Inbound messages)
    that is parsed and included on the different reports as part of the captured feedback.
  termsOfService: https://medallia.com/about/legal/terms/api
servers:
  - url: 'https://{api-gateway-hostname}'
    variables:
      api-gateway-hostname:
        default: conversations.medallia.com
        description:
          The Medallia Experience Cloud hostname used to access
          Medallia Reporting
paths:
  /cg/mc/custom/{id}:
    post: 
      tags:
        - Delivery Status
      description: Requests from the adapter identifying when messages were delivered to the customer(s).
      operationId: deliveryStatus
      parameters:
        - in: path
          name: id
          description: Channel guid
          schema:
            type: string
          required: true
        - in: header
          name: X-Hub-Signature
          schema:
            $ref: '#/components/headers/X-Hub-Signature'
          required: true
      requestBody:
        description: The  request payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                object:
                  type: string
                  enum: [page]
                entry:
                  type: array
                  items:
                    $ref: '#/components/schemas/entry_status'
      responses:
        200:
          description:
            The response to the query made, its data shape conforming to the
            structure requested in the query
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error

  /cg/mc/custom/{channel_id}:
    post: 
      tags:
        - Inbound message forwarding
      description: Requests from the customer/adapter to Medallia Conversations. customer(s).
      operationId: inbound
      parameters:
        - in: path
          name: channel_id
          schema:
            type: string
          required: true
        - in: header
          name: X-Hub-Signature
          schema:
            $ref: '#/components/headers/X-Hub-Signature'
          required: true
      requestBody:
        description: The  request payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                object:
                  type: string
                  enum: [page]
                entry:
                  type: array
                  items:
                    $ref: '#/components/schemas/entry_inbound'
      responses:
        200:
          description:
            The response to the query made, its data shape conforming to the
            structure requested in the query
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error

  /apis/v0/channels/{channel_guid}/messages:
    post: 
      tags:
        - Live Persons
      description: Requests from the customer/adapter to Medallia Conversations. customer(s).
      operationId: live_person
      parameters:
        - in: path
          name: channel_guid
          schema:
            type: string
          required: true
        - in: header
          name: X-Hub-Signature
          schema:
            $ref: '#/components/headers/X-Hub-Signature'
          required: true
      requestBody:
        description: The  request payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                object:
                  type: string
                  enum: [page]
                entry:
                  type: array
                  items:
                    $ref: '#/components/schemas/entry_inbound'
      responses:
        200:
          description:
            The response to the query made, its data shape conforming to the
            structure requested in the query
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error

  /apis/v0/channels/{guid}/messages:
    post: 
      tags:
        - Feedless Trigger
      description: Requests from the customer to Medallia to trigger a conversations. customer(s).
      operationId: feedless_trigger
      parameters:
        - in: path
          name: guid
          schema:
            type: string
          required: true
        - in: header
          name: X-Hub-Signature
          schema:
            $ref: '#/components/headers/X-Hub-Signature'
          required: true
      requestBody:
        description: The  request payload
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                object:
                  type: string
                  enum: [page]
                entry:
                  type: array
                  items:
                    $ref: '#/components/schemas/entry_feedless'
      responses:
        200:
          description:
            The response to the query made, its data shape conforming to the
            structure requested in the query
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Internal server error
  
components:
  headers:
    X-Hub-Signature:
      description: the SHA1 signature of the post payload. The signature is calculated using the keyed-hash message authentication code (HMAC) where the key is the <APP_SECRET> specified by the Secret property in the channel definition.
      schema:
        type: string
        format: identifier
      example: 94615edd-d9d0-4921-8b3e-60615b3d3431
  schemas:
    recipient:
      properties:
        id:
          type: string
          description: An identifier unique to the customer, such as phone number, email, or other channel-specific value. For phone numbers, the ID must be in E.164 format.
    message:
      properties:
        mid:
            type: string
        text:
          type: string
          description: Text message no longer than 1,600 characters. The channel service may split the message into multiple parts for delivery.
    quick_reply: 
      properties:
        content_type:
          type: string
        title:
          type: string
        payload:
          type: string
          description: Unique identifier ( UUID) of the quick reply option. The adapter can send the user response as this payload, when the quick reply/option is chosen
        image_url:
          type: string
    quick_replies:
      type: array
      items:
        $ref: '#/components/schemas/quick_reply'
    notification_type:
      type: string
    
    entry_status:
      properties:
        id:
          type: string
          description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        time:
          type: integer
          description: Unix epoch timestamp of the last event associated with the request. For example, when it was a multi-part message, this is the time of the last message-part.
        messagings:
          $ref: '#/components/schemas/messagings_status'

    entry_inbound:
      properties:
        id:
          type: string
          description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        time:
          type: integer
          description: Unix epoch timestamp of the last event associated with the request. For example, when it was a multi-part message, this is the time of the last message-part.
        messagings:
          $ref: '#/components/schemas/messagings_inbound'
    
    entry_feedless:
      properties:
        id:
          type: string
          description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        time:
          type: integer
          description: Unix epoch timestamp of the last event associated with the request. For example, when it was a multi-part message, this is the time of the last message-part.
        messagings:
          $ref: '#/components/schemas/messagings_feedless'

    messagings_status:
          type: array
          items:
            $ref: '#/components/schemas/messaging_status'
    
    messagings_inbound:
          type: array
          items:
            $ref: '#/components/schemas/messaging_inbound'
    
    messagings_feedless:
          type: array
          items:
            $ref: '#/components/schemas/messaging_feedless'

    messaging_status:
      properties:
        sender:
          properties:
            id:
              type: string
              description: An identifier unique to the customer, such as phone number, email, or other channel-specific value. For phone numbers, the ID must be in E.164 format.
        recipient:
          properties:
            id:
              type: string
              description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        timestamp:
          type: integer
        delivery:
          $ref: '#/components/schemas/delivery'

    messaging_inbound:
      properties:
        sender:
          properties:
            id:
              type: string
              description: An identifier unique to the customer, such as phone number, email, or other channel-specific value. For phone numbers, the ID must be in E.164 format.
        recipient:
          properties:
            id:
              type: string
              description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        timestamp:
          type: integer
        message:
          $ref: '#/components/schemas/message'
    
    messaging_feedless:
      properties:
        sender:
          properties:
            id:
              type: string
              description: An identifier unique to the customer, such as phone number, email, or other channel-specific value. For phone numbers, the ID must be in E.164 format.
        recipient:
          properties:
            id:
              type: string
              description: Unique identifier — in Medallia Conversations — of the messaging application instance. A different instance on the adapter must have another Page ID.
        timestamp:
          type: integer
        message:
          $ref: '#/components/schemas/message'
        trigger_parameters:
          properties:
            override_session: 
              type: boolean
            consumer:
              properties:
                id: 
                  type: string
                email:
                  type: string
            custom:
              properties:
                comcast_account_number:
                  type: integer
                session_id:
                  type: string
                channel:
                  type: string
                survey_type:
                  type: string
                queue:
                  type: string
                e_unitid:
                  type: string

    delivery:
          properties:
            mids:
              type: array
              items: 
                type: string
              description: (required) Identifier for the message sent as generated by the channel service. Used for tracking and debugging.
            status:
              type: string
            error:
              properties:
                code:
                  type: string
                  enum: [ failed, sent, delivered, undelivered ]
                name:
                  type: string
                message:
                  type: string
